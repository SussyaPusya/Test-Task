basePath: /
definitions:
  dto.Person:
    description: Структура, содержащая информацию о человеке.
    properties:
      age:
        example: 32
        type: integer
      createdAt:
        type: string
      gender:
        example: male
        type: string
      id:
        example: "1"
        type: string
      name:
        example: Dmitriy
        type: string
      nationality:
        example: RU
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для добавления и фильтрации людей
  title: People Enrichment API
  version: "1.0"
paths:
  /people:
    get:
      consumes:
      - application/json
      description: Получает список людей с фильтрацией и пагинацией
      parameters:
      - description: Имя
        in: query
        name: name
        type: string
      - description: Фамилия
        in: query
        name: surname
        type: string
      - description: Отчество
        in: query
        name: patronymic
        type: string
      - description: Пол
        in: query
        name: gender
        type: string
      - description: Возраст
        in: query
        name: age
        type: string
      - description: Национальность
        in: query
        name: country
        type: string
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Размер страницы (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Person'
            type: array
        "500":
          description: internal error
          schema:
            type: string
      summary: Получить список людей
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Считывает с внешнего апи пол возраст и гендер
      parameters:
      - description: Person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/dto.Person'
      produces:
      - application/json
      responses:
        "200":
          description: ID
          schema:
            type: string
        "400":
          description: bad json
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Добавить нового человека
      tags:
      - people
  /people/delete:
    delete:
      consumes:
      - application/json
      description: Удаляет запись из базы данных по идентификатору
      parameters:
      - description: ID человека
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: succesful delete
          schema:
            type: string
        "500":
          description: bla bla
          schema:
            type: string
      summary: Удалить человека по ID
      tags:
      - people
  /people/update:
    patch:
      consumes:
      - application/json
      description: Обновляет существующую запись по ID
      parameters:
      - description: ID человека
        in: query
        name: id
        required: true
        type: string
      - description: Обновлённые данные человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/dto.Person'
      produces:
      - application/json
      responses:
        "200":
          description: succesful update
          schema:
            type: string
        "400":
          description: bad json
          schema:
            type: string
        "500":
          description: InternalServerError
          schema:
            type: string
      summary: Обновить данные человека
      tags:
      - people
swagger: "2.0"
